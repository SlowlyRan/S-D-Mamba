class Args:
    def __init__(self,
                 is_training=1,
                 model = "",
                 model_id='ModelLSTM',
                 data='custom',
                 root_path='/kaggle/input/pv2data/',
                 data_path='pv_data.csv',
                 features='M',
                 target='OT',
                 freq='h',
                 checkpoints='/kaggle/working/',
                 seq_len = 24 * 4 * 7,
                 label_len = 24 * 4,
                 pred_len = 24 * 4,
                 enc_in=23,
                 dec_in=23,
                 c_out=23,
                 d_model=512,
                 n_heads=8,
                 e_layers=2,
                 d_layers=1,
                 d_ff=512,
                 moving_avg=25,
                 factor=1,
                 distil=True,
                 dropout=0.1,
                 embed='timeF',
                 activation='gelu',
                 output_attention=False,
                 do_predict=True,
                 num_workers=10,
                 itr=1,
                 train_epochs=50,
                 batch_size=32,
                 patience=5,
                 learning_rate=0.0001,
                 des='Exp',
                 loss='MSE',
                 lradj='type1',
                 use_amp=False,
                 use_gpu=True,
                 gpu=0,
                 use_multi_gpu=False,
                 devices='0,1,2,3',
                 exp_name='MTSF',
                 channel_independence=False,
                 inverse=False,
                 class_strategy='projection',
                 target_root_path='./data/electricity/',
                 target_data_path='electricity.csv',
                 efficient_training=False,
                 use_norm=False,
                 partial_start_index=0,
                 d_state=32):
        self.is_training = is_training
        self.model_id = model_id
        self.model =model
        self.data = data
        self.root_path = root_path
        self.data_path = data_path
        self.features = features
        self.target = target
        self.freq = freq
        self.checkpoints = checkpoints
        self.seq_len = seq_len
        self.label_len = label_len
        self.pred_len = pred_len
        self.enc_in = enc_in
        self.dec_in = dec_in
        self.c_out = c_out
        self.d_model = d_model
        self.n_heads = n_heads
        self.e_layers = e_layers
        self.d_layers = d_layers
        self.d_ff = d_ff
        self.moving_avg = moving_avg
        self.factor = factor
        self.distil = distil
        self.dropout = dropout
        self.embed = embed
        self.activation = activation
        self.output_attention = output_attention
        self.do_predict = do_predict
        self.num_workers = num_workers
        self.itr = itr
        self.train_epochs = train_epochs
        self.batch_size = batch_size
        self.patience = patience
        self.learning_rate = learning_rate
        self.des = des
        self.loss = loss
        self.lradj = lradj
        self.use_amp = use_amp
        self.use_gpu = use_gpu
        self.gpu = gpu
        self.use_multi_gpu = use_multi_gpu
        self.devices = devices
        self.exp_name = exp_name
        self.channel_independence = channel_independence
        self.inverse = inverse
        self.class_strategy = class_strategy
        self.target_root_path = target_root_path
        self.target_data_path = target_data_path
        self.efficient_training = efficient_training
        self.use_norm = use_norm
        self.partial_start_index = partial_start_index
        self.d_state = d_state